# =======================
# Shiro INI configuration
# =======================
[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealm.permissionsLookupEnabled=false
# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"

#authenticationQuery
jdbcRealm.authenticationQuery = SELECT password FROM DB_USER WHERE email = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = SELECT role FROM DB_USER WHERE email = ?


#Configuration dataBase
dataSource = org.postgresql.ds.PGPoolingDataSource
dataSource.serverName = ec2-54-209-187-69.compute-1.amazonaws.com
dataSource.databaseName = d58vgjn7ghq968
dataSource.ssl = true
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.portNumber = 5432
dataSource.user = wgqwcdylrkrnap
dataSource.password = 0b6598273240c47460cc8c99ab11dea7ed621d49354531028091770dc975db9d
jdbcRealm.dataSource = $dataSource

#performance
#cacheManager=org.apache.shiro.cache.ehcache.EhCacheManager
#jdbcRealm.cacheManager=$cacheManager

#important URL
authc.loginUrl = /login.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

#passwordMatcher
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations=1
credentialsMatcher.storedCredentialsHexEncoded = true

# only not autenticated,  path of you filter(filter to "block" login.xhtml page to logged users , they have to logout to use login.xhtml page.)
#path of you filter
onlynot=edu.eci.cvds.security.OnlyNotAutenticated
#url redirect if you try go to login.xhtml
##onlynot.welcomeurl=/index.html

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
#[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

#[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web docfaces/login.xhtml =authc/anom ..., rol[specific rol]
/index.html = anon
/login.xhtml = anon
/= logout
/admin/** = authc, roles[administrador]
/usuario/** = authc, roles[usuario]

/=onlynot
/login.xhtml=onlynot